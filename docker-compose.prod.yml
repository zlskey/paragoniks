version: "3.9"

services:
  rs-app:
    container_name: ${DOCKER_APP_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ./app
      dockerfile: docker/Dockerfile
      target: production
      args:
        - VITE_NODE_ENV=${DOCKER_APP_NODE_ENV}
        - VITE_PORT=${DOCKER_APP_INTERNAL_PORT}
        - VITE_RS_API_URL=${DOCKER_APP_API_URL}
    env_file:
      - ".env"
      - "./app/.env"
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.rs.entrypoints=https"
      - "traefik.http.routers.rs.rule=Host(`${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.rs.tls=true"
      - "traefik.http.routers.rs.service=rs-service"
      - "traefik.http.services.rs-service.loadbalancer.server.port=80"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"
    networks:
      - proxy
    depends_on:
      - rs-api

  rs-api:
    container_name: ${DOCKER_API_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ./api
      dockerfile: docker/Dockerfile
      target: production
    env_file:
      - ".env"
      - "./api/.env"
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.rs-api.entrypoints=https"
      - "traefik.http.routers.rs-api.rule=Host(`api.${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.rs-api.tls=true"
      - "traefik.http.routers.rs-api.service=rs-api-service"
      - "traefik.http.services.rs-api-service.loadbalancer.server.port=${DOCKER_API_INTERNAL_PORT}"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - rs-local-network

  rs-db:
    container_name: ${DOCKER_DB_CONTAINER_NAME}
    image: mongo
    restart: unless-stopped
    networks:
      - rs-local-network

networks:
  proxy:
    external: true
  rs-local-network:
    driver: bridge

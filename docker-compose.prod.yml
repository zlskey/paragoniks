version: "3.9"

services:
  paragoniks-api:
    container_name: ${DOCKER_API_CONTAINER_NAME}
    image: zlskey/paragoniks-api:latest
    restart: unless-stopped
    env_file:
      - ".env"
      - "./api/.env"
    volumes:
      - ./data/uploads:/usr/src/app/uploads
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.paragoniks-api.entrypoints=https"
      - "traefik.http.routers.paragoniks-api.rule=Host(`api.${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.paragoniks-api.tls=true"
      - "traefik.http.routers.paragoniks-api.service=paragoniks-api-service"
      - "traefik.http.services.paragoniks-api-service.loadbalancer.server.port=${DOCKER_API_INTERNAL_PORT}"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"
    networks:
      - proxy
      - paragoniks-local-network

  paragoniks-web-app:
    container_name: ${DOCKER_APP_CONTAINER_NAME}
    restart: unless-stopped
    build:
      context: ./app
      dockerfile: Dockerfile
      target: production
    env_file:
      - ".env"
      - "./app/.env"
    labels:
      # Enable Traefik for this container
      - "traefik.enable=true"

      # HTTPS Secure Router Configuration
      - "traefik.http.routers.paragoniks-web-app.entrypoints=https"
      - "traefik.http.routers.paragoniks-web-app.rule=Host(`${DOCKER_DOMAIN}`)"
      - "traefik.http.routers.paragoniks-web-app.tls=true"
      - "traefik.http.routers.paragoniks-web-app.service=paragoniks-web-app-service"
      - "traefik.http.services.paragoniks-web-app-service.loadbalancer.server.port=${DOCKER_APP_INTERNAL_PORT}"

      # Docker Network Configuration
      - "traefik.docker.network=proxy"
    networks:
      - proxy

  paragoniks-db:
    container_name: ${DOCKER_DB_CONTAINER_NAME}
    image: mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${DOCKER_DB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${DOCKER_DB_ROOT_PASSWORD}
    networks:
      - paragoniks-local-network
    volumes:
      - ./data/db:/data/db
    ports:
      - 2137:27017

networks:
  proxy:
    external: true
  paragoniks-local-network:
    driver: bridge

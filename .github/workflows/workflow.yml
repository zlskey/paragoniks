name: Super Workflow # @todo - split it sometime in the future

on:
  push:
    branches:
      - main
      - check

jobs:
  eslint:
    runs-on: ubuntu-22.04
    name: ESLint
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Run ESLint check for frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
        working-directory: ./app
      - name: Run ESLint check for backend
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
        working-directory: ./api
  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    needs: eslint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Declare commit hash variable
        shell: bash
        run: echo "sha_short=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./api
          file: ./api/docker/Dockerfile
          target: production
          tags: |
            zlskey/paragoniks-api:latest
            zlskey/paragoniks-api:${{ env.sha_short }}
          push: true
          cache-from: type=registry,ref=zlskey/paragoniks-api:buildcache
          cache-to: type=registry,ref=zlskey/paragoniks-api:buildcache,mode=max


  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    needs: build-backend
    steps:
      - name: Deploying through SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.PARAGONIKS_SSH_IP }}
          port: ${{ secrets.PARAGONIKS_SSH_PORT }}
          key: ${{ secrets.PARAGONIKS_DEPLOYER_RSA_KEY }}
          username: ${{ secrets.PARAGONIKS_DEPLOYER_USERNAME }}
          script: |
            echo "Moving into project directory"
            cd /home/projects/paragoniks

            # Set global git config for the deployer if needed
            echo "Configuring git user"
            git config --global user.name ${{ vars.GIT_USERNAME }}
            git config --global user.email ${{ vars.GIT_MAIL }}

            # Checkout to the current branch
            echo "Checking out to main branch"
            git fetch origin
            git checkout main

            # Pull the latest changes
            echo "Pulling git changes"
            git remote set-url origin https://${{ vars.GIT_USERNAME }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ vars.GIT_USERNAME }}/paragoniks.git
            git pull origin main

            echo "Pulling images"
            echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login --username "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
            make pull-images
            echo "Starting docker"
            make start-production BUILD=true

name: ESLint Check

on: [push]

jobs:
  eslint:
    runs-on: ubuntu-22.04
    name: ESLint
    strategy:
      matrix:
        node-version: [20]
    steps:
      - uses: actions/checkout@v4
      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false
      - name: Run ESLint check for frontend
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
        working-directory: ./app
      - name: Run ESLint check for backend
        run: |
          pnpm install --frozen-lockfile
          pnpm lint
        working-directory: ./api
  build-backend:
    runs-on: ubuntu-latest
    name: Build Backend
    needs: eslint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.15.0
        with:
          context: ./api
          file: ./api/docker/Dockerfile
          target: production
          tags: zlskey/paragoniks-api:latest
          build-args: |
            NODE_ENV=${{ vars.NODE_ENV }}
            PORT=${{ vars.PORT }}
            CORS_ORIGIN=${{ vars.CORS_ORIGIN }}
          secrets: |
            JWT_SECRET=${{ secrets.JWT_SECRET }}
            MONGODB_URL=${{ secrets.MONGODB_URL }}
            MONGODB_ROOT_USERNAME=${{ secrets.MONGODB_ROOT_USERNAME }}
            MONGODB_ROOT_PASSWORD=${{ secrets.MONGODB_ROOT_PASSWORD }}
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          push: true
  deploy-backend:
    runs-on: ubuntu-latest
    name: Deploy Backend
    needs: build-backend
    steps:
      - name: ssh-job
        uses: nekiro/ssh-job@e0d177751aced5bcaf110ce4d782a681e5e12856
        with:
          host: 192.109.241.187
          port: 420
          key: ${{ secrets.PARAGONIKS_DEPLOYER_RSA_KEY }}
          user: paragoniks-deployer
          command: |
            cd /home/projects/roommate-shopper
            git pull
            make pull-images
            make start-production
    
    

